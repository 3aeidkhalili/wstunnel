// Generated by CoffeeScript 1.6.3
(function() {
  var WebSocketClient, bindSockets, net, wst_client;

  WebSocketClient = require('websocket').client;

  net = require("net");

  bindSockets = require("./bindSockets");

  module.exports = wst_client = (function() {
    function wst_client() {
      this.tcpServer = net.createServer();
    }

    wst_client.prototype.start = function(localPort, wsHostUrl, remoteAddr) {
      var _this = this;
      this.tcpServer.listen(localPort);
      return this.tcpServer.on("connection", function(tcpConn) {
        var header, match, url, wsClient;
        console.log("Connection detected");
        wsClient = new WebSocketClient();
        wsClient.on('connectFailed', function(error) {
          console.log('WS connect error: ' + error.toString());
          return tcpConn.destroy();
        });
        wsClient.on('connect', function(wsConn) {
          console.log('WebSocket connected, binding tunnel');
          return bindSockets(wsConn, tcpConn);
        });
        header = {};
        match = wsHostUrl.match(/(wss?:\/\/)(.*)@(.*)/);
        if (match) {
          header.Authorization = new Buffer(match[2]);
          header.Authorization = 'Basic ' + header.Authorization.toString('base64');
          wsHostUrl = match[1] + match[3];
        }
        if (remoteAddr) {
          url = "" + wsHostUrl + "/?dst=" + remoteAddr;
        } else {
          url = "" + wsHostUrl;
        }
        return wsClient.connect(url, 'tunnel-protocol', null, header);
      });
    };

    return wst_client;

  })();

}).call(this);
